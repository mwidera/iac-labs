# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./example-app
    concurrency:
      group: build
    steps:
    - name: Install Poetry Action
      uses: snok/install-poetry@v1.3.4
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: poetry install --no-root --no-interaction
    - name: Cache build venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: /home/runner/work/iac-labs/example-app/.venv
        key: ${{ runner.os }}-venv

  check:
    needs: [build]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./example-app
    concurrency:
      group: check
    steps:
    - name: Lint 
      run: poetry run task lint
    - name: Formatter 
      run: poetry run task formatter
    - name: Security 
      run: poetry run task security

  test:
    needs: [check]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./example-app
    concurrency:
      group: test
    steps:
    - name: Test 
      run: poetry run task test