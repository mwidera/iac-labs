[tool.poetry]
name = "example-app"
version = "0.1.0"
description = "Example app for IaC learning purposes"
authors = ["mwidera <28962708+mwidera@users.noreply.github.com>"]
license = "MIT"
readme = "README.md"
packages = [{include = "example_app"}]

[build-system]
requires = ["setuptools", "poetry-core>=1.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.dependencies]
python = "^3.11"
Flask = "3.0.3"
Werkzeug = "3.1.3"
Jinja2 = "3.1.4"
Flask-Login = "0.6.3"
Flask-Migrate = "4.0.7"
WTForms = "3.1.2"
Flask-WTF = "1.2.2"
Flask-SQLAlchemy = "3.1.1"
SQLAlchemy = "2.0.36"
email-validator = "2.2.0"
gunicorn = "23.0.0"
flask-restx = "1.3.0"
python-dotenv = "1.0.1"
Flask-Minify = "0.48"
taskipy = "^1.14.0"
psycopg2-binary = "^2.9.10"

[tool.poetry.group.dev.dependencies]
black = "^24.10.0"
pylint = "^3.3.1"
pytest = "^8.3.3"
isort = "^5.13.2"
flake8 = "^7.1.1"
bandit = "^1.7.10"

[tool.pylint.'MESSAGES CONTROL']
max-line-length = 120
disable = "C0116, C0115, R0903"

[tool.taskipy.tasks]
lint = "pylint apps"
formatter = "black --check apps"
security = "bandit -r apps"
test = "pytest tests/"
server = "poetry run python run.py"
local = "export DEBUG=True && poetry run python run.py"